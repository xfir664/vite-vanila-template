var p=i=>{throw TypeError(i)};var b=(i,e,t)=>e.has(i)||p("Cannot "+t);var h=(i,e,t)=>e.has(i)?p("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(i):e.set(i,t);var s=(i,e,t)=>(b(i,e,"access private method"),t);var a,m,l,g,I,c,o,x;class R{constructor(e,t={}){h(this,a);const n=document.querySelector(e);n&&(this.minNumberInput=n.querySelector(".input-min"),this.maxNumberInput=n.querySelector(".input-max"),this.minRangeInput=n.querySelector(".range-min"),this.maxRangeInput=n.querySelector(".range-max"),this.rangeBar=n.querySelector(".range-progress"),this.minValue=s(this,a,m).call(this,this.minNumberInput,"min",t.minValue,0),this.maxValue=s(this,a,m).call(this,this.maxNumberInput,"max",t.maxValue,100),this.step=s(this,a,m).call(this,this.minNumberInput,"step",t.step,1),this.gap=t.gap||0,s(this,a,l).call(this),s(this,a,g).call(this))}}a=new WeakSet,m=function(e,t,n,u){const r=e.getAttribute(t);return r!==null?parseFloat(r):n!==void 0?n:u},l=function(){[this.minNumberInput,this.maxNumberInput,this.minRangeInput,this.maxRangeInput].forEach(t=>{t&&(t.min=t.getAttribute("min")||this.minValue,t.max=t.getAttribute("max")||this.maxValue,t.step=t.getAttribute("step")||this.step,t.value=t.classList.contains("input-min")||t.classList.contains("range-min")?t.min||this.minValue:t.max||this.maxValue)})},g=function(){[this.minNumberInput,this.maxNumberInput,this.minRangeInput,this.maxRangeInput].forEach(t=>{t.addEventListener("input",n=>{s(this,a,I).call(this,n.target)})})},I=function(e){let t=parseInt(this.minNumberInput.value),n=parseInt(this.maxNumberInput.value);if(s(this,a,c).call(this,e))n-t<this.gap&&(e.classList.contains("input-min")?t=n-this.gap:n=t+this.gap,e.classList.contains("input-min")?this.minNumberInput.value=t:this.maxNumberInput.value=n),this.minRangeInput.value=t,this.maxRangeInput.value=n;else if(s(this,a,o).call(this,e)){let u=parseInt(this.minRangeInput.value),r=parseInt(this.maxRangeInput.value);r-u<this.gap&&(e.classList.contains("range-min")?u=r-this.gap:r=u+this.gap,e.classList.contains("range-min")?this.minRangeInput.value=u:this.maxRangeInput.value=r),this.minNumberInput.value=u,this.maxNumberInput.value=r}s(this,a,x).call(this)},c=function(e){return e.classList.contains("number-input")},o=function(e){return e.classList.contains("range-input")},x=function(){if(!this.rangeBar)return;const e=parseInt(this.minRangeInput.value),t=parseInt(this.maxRangeInput.value),n=(e-parseInt(this.minRangeInput.min))/(this.maxValue-parseInt(this.minRangeInput.min))*100,u=(t-parseInt(this.maxRangeInput.min))/(this.maxValue-parseInt(this.maxRangeInput.min))*100;this.rangeBar.style.left=`${n}%`,this.rangeBar.style.right=`${100-u}%`};function N(){new R(".double-range-wrapper",{minValue:100,maxValue:1e3,step:10,gap:100})}export{N as initDoubleRangeSlider};
//# sourceMappingURL=init-range-slider-kdejnTRd.js.map
